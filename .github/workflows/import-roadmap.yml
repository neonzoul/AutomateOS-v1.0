name: Import Roadmap from CSV

on:
    workflow_dispatch:

jobs:
    import-roadmap:
        runs-on: ubuntu-latest
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:
            - uses: actions/checkout@v4

            - name: Install Python requests
              run: python -m pip install --upgrade pip requests

            - name: Create issues from CSV file
              run: |
                  python - <<'PY'
                  import os, csv, json, sys
                  try:
                      import requests
                  except Exception as e:
                      print('requests not available:', e)
                      sys.exit(1)

                  token = os.environ.get('GITHUB_TOKEN')
                  repo = os.environ.get('GITHUB_REPOSITORY')
                  path = 'automateos-phase1.csv'
                  if not os.path.exists(path):
                      print(f'File not found at path: {path}')
                      sys.exit(1)

                  url = f'https://api.github.com/repos/{repo}/issues'
                  with open(path, newline='', encoding='utf-8') as f:
                      reader = csv.DictReader(f)
                      for row in reader:
                          title = (row.get('Title') or '').strip()
                          if not title:
                              print('Skipping empty title row')
                              continue
                          body = (row.get('Body') or '').strip()
                          labels = [l.strip() for l in (row.get('Labels') or '').split(',') if l.strip()]
                          payload = {'title': title, 'body': body}
                          if labels:
                              payload['labels'] = labels

                          headers = {
                              'Authorization': f'token {token}',
                              'Accept': 'application/vnd.github.v3+json'
                          }
                          resp = requests.post(url, json=payload, headers=headers)
                          try:
                              data = resp.json()
                          except Exception:
                              data = resp.text
                          print(resp.status_code, json.dumps(data))
                  PY
